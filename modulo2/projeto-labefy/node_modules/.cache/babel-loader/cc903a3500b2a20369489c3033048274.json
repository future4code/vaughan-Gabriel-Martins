{"ast":null,"code":"var _jsxFileName = \"/Users/gdlmartins/Desktop/ti/labenu/semana01/codigos/vaughan-Gabriel-Martins/modulo2/projeto-labefy/src/pages/PlayListDetailPage/PlayListDetailPage.js\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { BASE_URL, AuthorizationUser } from \"../../constants/urls\";\nimport { TracksBox } from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlayListDetailPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      playlistTracks: [],\n      nameMusic: '',\n      nameArtist: '',\n      url: '',\n      music: ''\n    };\n\n    this.getPlaylistTracks = id => {\n      const url = `${BASE_URL}/${id}/tracks`;\n      const axiosConfig = {\n        headers: {\n          Authorization: AuthorizationUser\n        }\n      };\n      axios.get(url, axiosConfig).then(res => {\n        this.setState({\n          playlistTracks: res.data.result.tracks,\n          nameMusic: '',\n          nameArtist: '',\n          url: ''\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.addTrackToPlaylist = id => {\n      const url = `${BASE_URL}/${id}/tracks`;\n      const axiosConfig = {\n        headers: {\n          Authorization: AuthorizationUser\n        }\n      };\n      const body = {\n        name: this.state.nameMusic,\n        artist: this.state.nameArtist,\n        url: this.state.url\n      };\n      axios.post(url, body, axiosConfig).then(res => {\n        console.log(res);\n        this.getPlaylistTracks(this.props.listId);\n        alert('Musica Adicionada');\n      }).catch(err => console.log(err));\n    };\n\n    this.onChangeNameMusic = e => {\n      this.setState({\n        nameMusic: e.target.value\n      });\n    };\n\n    this.onChangeNameSinger = e => {\n      this.setState({\n        nameArtist: e.target.value\n      });\n    };\n\n    this.onChangeURL = e => {\n      this.setState({\n        url: e.target.value\n      });\n    };\n\n    this.addMusic = () => {\n      console.log('clicado');\n      this.addTrackToPlaylist(this.props.listId);\n    };\n\n    this.givenUrl = url => {\n      this.setState({\n        music: new Audio(url)\n      });\n      console.log(this.state.music);\n    };\n\n    this.onClickPlay = () => {\n      console.log('play clicado');\n      this.state.music.play();\n    };\n\n    this.onClickPause = () => {\n      this.state.music.pause();\n      console.log('pause clicado');\n    };\n  }\n\n  componentDidMount() {\n    this.getPlaylistTracks(this.props.listId);\n    console.log('didmount');\n  }\n\n  render() {\n    // console.log(this.state.playlistTracks)\n    console.log(this.props.listId);\n    const tracks = this.state.playlistTracks.map(item => {\n      return /*#__PURE__*/_jsxDEV(TracksBox, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [item.url, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.givenUrl(item.url),\n          children: \"Carregar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.onClickPlay(),\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.onClickPause(),\n          children: \"Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.props.onClickGotoList,\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PlayListDetailPage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.state.nameMusic,\n        onChange: this.onChangeNameMusic,\n        placeholder: \"Nome da musica\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.state.nameArtist,\n        onChange: this.onChangeNameSinger,\n        placeholder: \"Nome da cantor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.state.url,\n        onChange: this.onChangeURL,\n        placeholder: \"URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addMusic,\n        children: \"Add Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), tracks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default PlayListDetailPage;","map":{"version":3,"sources":["/Users/gdlmartins/Desktop/ti/labenu/semana01/codigos/vaughan-Gabriel-Martins/modulo2/projeto-labefy/src/pages/PlayListDetailPage/PlayListDetailPage.js"],"names":["axios","React","BASE_URL","AuthorizationUser","TracksBox","PlayListDetailPage","Component","state","playlistTracks","nameMusic","nameArtist","url","music","getPlaylistTracks","id","axiosConfig","headers","Authorization","get","then","res","setState","data","result","tracks","catch","err","console","log","addTrackToPlaylist","body","name","artist","post","props","listId","alert","onChangeNameMusic","e","target","value","onChangeNameSinger","onChangeURL","addMusic","givenUrl","Audio","onClickPlay","play","onClickPause","pause","componentDidMount","render","map","item","onClickGotoList"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { BASE_URL,  AuthorizationUser } from \"../../constants/urls\";\nimport {TracksBox} from './styled'\n\n\n\n\n\nclass PlayListDetailPage extends React.Component  { \n  state ={ \n    playlistTracks:[],\n    nameMusic:'',\n    nameArtist:'', \n    url:'',\n    music:'',\n  }\n\n  componentDidMount(){\n    this.getPlaylistTracks(this.props.listId)\n    console.log('didmount')\n  }\n   \n  getPlaylistTracks =(id)=>{ \n    const url= `${BASE_URL}/${id}/tracks`\n    const axiosConfig ={headers:{Authorization: AuthorizationUser}}\n    axios\n      .get(url, axiosConfig)\n      .then(res =>{\n        this.setState({\n          playlistTracks: (res.data.result.tracks),\n          nameMusic:'',\n          nameArtist:'', \n          url:'',\n        }) \n      })\n      .catch( err => console.log(err))\n  }\n\n  addTrackToPlaylist = (id)=> { \n    const url= `${BASE_URL}/${id}/tracks`\n    const axiosConfig ={headers:{Authorization: AuthorizationUser}}\n    const body ={ name:this.state.nameMusic , artist:this.state.nameArtist , url:this.state.url }\n\n    axios\n      .post(url,body,axiosConfig)\n      .then(res => { \n        console.log(res)\n         this.getPlaylistTracks(this.props.listId);\n         alert('Musica Adicionada');\n      })\n      .catch(err => console.log(err))\n  }\n\n  onChangeNameMusic =(e)=>{\n    this.setState({nameMusic:e.target.value})\n  }\n  onChangeNameSinger =(e) => { \n    this.setState({ nameArtist:e.target.value})\n  }\n  onChangeURL =(e)=> { \n    this.setState({url:e.target.value})\n  }\n  addMusic =() => { \n    console.log('clicado')\n    this.addTrackToPlaylist(this.props.listId)\n  }\n\n  givenUrl = (url)=>{ \n    this.setState({music : new Audio(url)})\n    console.log(this.state.music)\n  }\n  \n  onClickPlay = ()=> { \n    console.log('play clicado')\n    this.state.music.play()\n  }\n  onClickPause = ()=> { \n    this.state.music.pause()\n    console.log('pause clicado')\n\n  }\n  render(){ \n    // console.log(this.state.playlistTracks)\n    console.log(this.props.listId)\n     const tracks = this.state.playlistTracks.map(item => { \n       return<TracksBox key={item.id} >\n          <p>{item.name}</p>\n          <p>{item.artist}</p>\n          <p>{item.url} </p>\n          <p>{item.id}</p>\n        <button onClick={()=>this.givenUrl(item.url)}>Carregar</button>\n        {/* <button onClick={()=>{this.givenUrl(item.url);this.onClickPlay()}}>Carregar/Play</button> */}\n        <button onClick={()=>this.onClickPlay()}>Play</button>\n        <button onClick={()=> this.onClickPause()}>Pause</button>\n\n       </TracksBox> \n     })\n\n\n    return(  \n          \n        <div>\n        <button onClick={this.props.onClickGotoList}>Voltar</button>\n\n        <h1>PlayListDetailPage</h1>\n        <input value={this.state.nameMusic} onChange={this.onChangeNameMusic} \n        placeholder=\"Nome da musica\"/>\n        <input value={this.state.nameArtist} onChange={this.onChangeNameSinger} \n        placeholder=\"Nome da cantor\"/>\n        <input value={this.state.url} onChange={this.onChangeURL} placeholder=\"URL\"/>\n        <button onClick={this.addMusic}>Add Music</button>\n        {tracks}\n        </div>\n    )\n  }\n\n}\n\nexport default PlayListDetailPage;"]},"metadata":{},"sourceType":"module"}