{"ast":null,"code":"var _jsxFileName = \"/Users/gdlmartins/Desktop/ti/labenu/semana01/codigos/vaughan-Gabriel-Martins/modulo2/projeto-labefy/src/pages/PlayListDetailPage/PlayListDetailPage.js\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport ReactAudioPlayer from 'react-audio-player';\nimport { BASE_URL, AuthorizationUser } from \"../../constants/urls\";\nimport { TracksBox } from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlayListDetailPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      playlistTracks: [],\n      nameMusic: '',\n      nameArtist: '',\n      url: '',\n      music: ''\n    };\n\n    this.getPlaylistTracks = idList => {\n      const url = `${BASE_URL}/${idList}/tracks`;\n      const axiosConfig = {\n        headers: {\n          Authorization: AuthorizationUser\n        }\n      };\n      axios.get(url, axiosConfig).then(res => {\n        this.setState({\n          playlistTracks: res.data.result.tracks,\n          nameMusic: '',\n          nameArtist: '',\n          url: ''\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.addTrackToPlaylist = idPlaylist => {\n      const url = `${BASE_URL}/${idPlaylist}/tracks`;\n      const axiosConfig = {\n        headers: {\n          Authorization: AuthorizationUser\n        }\n      };\n      const body = {\n        name: this.state.nameMusic,\n        artist: this.state.nameArtist,\n        url: this.state.url\n      };\n      axios.post(url, body, axiosConfig).then(res => {\n        console.log(res);\n        this.getPlaylistTracks(this.props.listId);\n        alert('Musica Adicionada');\n      }).catch(err => console.log(err));\n    };\n\n    this.removeTrackFromPlaylist = (idlist, idMusic) => {\n      const url = `${BASE_URL}/${idlist}/tracks/${idMusic}`;\n      const axiosConfig = {\n        headers: {\n          Authorization: AuthorizationUser\n        }\n      };\n      axios.delete(url, axiosConfig).then(res => {\n        console.log(res);\n        this.getPlaylistTracks(this.props.listId);\n        alert('Musica deletada');\n      }).catch(err => console.log(err));\n    };\n\n    this.onChangeNameMusic = e => {\n      this.setState({\n        nameMusic: e.target.value\n      });\n    };\n\n    this.onChangeNameSinger = e => {\n      this.setState({\n        nameArtist: e.target.value\n      });\n    };\n\n    this.onChangeURL = e => {\n      this.setState({\n        url: e.target.value\n      });\n    };\n\n    this.addMusic = () => {\n      console.log('clicado');\n      this.addTrackToPlaylist(this.props.listId);\n    };\n\n    this.onClickDelete = idMusic => {\n      console.log('Delete clicado', idMusic);\n      this.removeTrackFromPlaylist(this.props.listId, idMusic);\n    };\n  }\n\n  componentDidMount() {\n    this.getPlaylistTracks(this.props.listId);\n    console.log('didmount');\n  }\n\n  render() {\n    console.log(this.state.playlistTracks); // console.log(this.props.listId)\n\n    const tracks = this.state.playlistTracks.map(item => {\n      return /*#__PURE__*/_jsxDEV(TracksBox, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.onClickDelete(item.id),\n          children: \"Deletar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [item.url, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          id: \"Test_Audio\",\n          controls: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: item.url,\n            type: \"audio/mpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.props.onClickGotoList,\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PlayListDetailPage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.state.nameMusic,\n        onChange: this.onChangeNameMusic,\n        placeholder: \"Nome da musica\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.state.nameArtist,\n        onChange: this.onChangeNameSinger,\n        placeholder: \"Nome da cantor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: this.state.url,\n        onChange: this.onChangeURL,\n        placeholder: \"URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addMusic,\n        children: \"Add Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), tracks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default PlayListDetailPage;","map":{"version":3,"sources":["/Users/gdlmartins/Desktop/ti/labenu/semana01/codigos/vaughan-Gabriel-Martins/modulo2/projeto-labefy/src/pages/PlayListDetailPage/PlayListDetailPage.js"],"names":["axios","React","ReactAudioPlayer","BASE_URL","AuthorizationUser","TracksBox","PlayListDetailPage","Component","state","playlistTracks","nameMusic","nameArtist","url","music","getPlaylistTracks","idList","axiosConfig","headers","Authorization","get","then","res","setState","data","result","tracks","catch","err","console","log","addTrackToPlaylist","idPlaylist","body","name","artist","post","props","listId","alert","removeTrackFromPlaylist","idlist","idMusic","delete","onChangeNameMusic","e","target","value","onChangeNameSinger","onChangeURL","addMusic","onClickDelete","componentDidMount","render","map","item","id","onClickGotoList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,QAAT,EAAoBC,iBAApB,QAA6C,sBAA7C;AACA,SAAQC,SAAR,QAAwB,UAAxB;;;AAIA,MAAMC,kBAAN,SAAiCL,KAAK,CAACM,SAAvC,CAAkD;AAAA;AAAA;AAAA,SAChDC,KADgD,GACzC;AACLC,MAAAA,cAAc,EAAC,EADV;AAELC,MAAAA,SAAS,EAAC,EAFL;AAGLC,MAAAA,UAAU,EAAC,EAHN;AAILC,MAAAA,GAAG,EAAC,EAJC;AAKLC,MAAAA,KAAK,EAAC;AALD,KADyC;;AAAA,SAchDC,iBAdgD,GAc5BC,MAAD,IAAU;AAC3B,YAAMH,GAAG,GAAG,GAAET,QAAS,IAAGY,MAAO,SAAjC;AACA,YAAMC,WAAW,GAAE;AAACC,QAAAA,OAAO,EAAC;AAACC,UAAAA,aAAa,EAAEd;AAAhB;AAAT,OAAnB;AACAJ,MAAAA,KAAK,CACFmB,GADH,CACOP,GADP,EACYI,WADZ,EAEGI,IAFH,CAEQC,GAAG,IAAG;AACV,aAAKC,QAAL,CAAc;AACZb,UAAAA,cAAc,EAAGY,GAAG,CAACE,IAAJ,CAASC,MAAT,CAAgBC,MADrB;AAEZf,UAAAA,SAAS,EAAC,EAFE;AAGZC,UAAAA,UAAU,EAAC,EAHC;AAIZC,UAAAA,GAAG,EAAC;AAJQ,SAAd;AAMD,OATH,EAUGc,KAVH,CAUUC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVjB;AAWD,KA5B+C;;AAAA,SA8BhDG,kBA9BgD,GA8B1BC,UAAD,IAAe;AAClC,YAAMnB,GAAG,GAAG,GAAET,QAAS,IAAG4B,UAAW,SAArC;AACA,YAAMf,WAAW,GAAE;AAACC,QAAAA,OAAO,EAAC;AAACC,UAAAA,aAAa,EAAEd;AAAhB;AAAT,OAAnB;AACA,YAAM4B,IAAI,GAAE;AAAEC,QAAAA,IAAI,EAAC,KAAKzB,KAAL,CAAWE,SAAlB;AAA8BwB,QAAAA,MAAM,EAAC,KAAK1B,KAAL,CAAWG,UAAhD;AAA6DC,QAAAA,GAAG,EAAC,KAAKJ,KAAL,CAAWI;AAA5E,OAAZ;AAEAZ,MAAAA,KAAK,CACFmC,IADH,CACQvB,GADR,EACYoB,IADZ,EACiBhB,WADjB,EAEGI,IAFH,CAEQC,GAAG,IAAI;AACXO,QAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACC,aAAKP,iBAAL,CAAuB,KAAKsB,KAAL,CAAWC,MAAlC;AACAC,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACF,OANH,EAOGZ,KAPH,CAOSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPhB;AAQD,KA3C+C;;AAAA,SA6ChDY,uBA7CgD,GA6CtB,CAACC,MAAD,EAASC,OAAT,KAAoB;AAC5C,YAAM7B,GAAG,GAAI,GAAET,QAAS,IAAGqC,MAAO,WAAUC,OAAQ,EAApD;AACA,YAAMzB,WAAW,GAAE;AAACC,QAAAA,OAAO,EAAC;AAACC,UAAAA,aAAa,EAAEd;AAAhB;AAAT,OAAnB;AAEAJ,MAAAA,KAAK,CACF0C,MADH,CACU9B,GADV,EACeI,WADf,EAEGI,IAFH,CAEQC,GAAG,IAAI;AACXO,QAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACC,aAAKP,iBAAL,CAAuB,KAAKsB,KAAL,CAAWC,MAAlC;AACAC,QAAAA,KAAK,CAAC,iBAAD,CAAL;AACF,OANH,EAOGZ,KAPH,CAOSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPhB;AAQD,KAzD+C;;AAAA,SA2DhDgB,iBA3DgD,GA2D5BC,CAAD,IAAK;AACtB,WAAKtB,QAAL,CAAc;AAACZ,QAAAA,SAAS,EAACkC,CAAC,CAACC,MAAF,CAASC;AAApB,OAAd;AACD,KA7D+C;;AAAA,SA8DhDC,kBA9DgD,GA8D3BH,CAAD,IAAO;AACzB,WAAKtB,QAAL,CAAc;AAAEX,QAAAA,UAAU,EAACiC,CAAC,CAACC,MAAF,CAASC;AAAtB,OAAd;AACD,KAhE+C;;AAAA,SAiEhDE,WAjEgD,GAiElCJ,CAAD,IAAM;AACjB,WAAKtB,QAAL,CAAc;AAACV,QAAAA,GAAG,EAACgC,CAAC,CAACC,MAAF,CAASC;AAAd,OAAd;AACD,KAnE+C;;AAAA,SAoEhDG,QApEgD,GAoEtC,MAAM;AACdrB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,WAAKC,kBAAL,CAAwB,KAAKM,KAAL,CAAWC,MAAnC;AACD,KAvE+C;;AAAA,SA8EhDa,aA9EgD,GA8E/BT,OAAD,IAAY;AAC1Bb,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BY,OAA9B;AACA,WAAKF,uBAAL,CAA8B,KAAKH,KAAL,CAAWC,MAAzC,EAAgDI,OAAhD;AAED,KAlF+C;AAAA;;AAShDU,EAAAA,iBAAiB,GAAE;AACjB,SAAKrC,iBAAL,CAAuB,KAAKsB,KAAL,CAAWC,MAAlC;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;;AAwEDuB,EAAAA,MAAM,GAAE;AACNxB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWC,cAAvB,EADM,CAEN;;AACC,UAAMgB,MAAM,GAAG,KAAKjB,KAAL,CAAWC,cAAX,CAA0B4C,GAA1B,CAA8BC,IAAI,IAAI;AACnD,0BAAM,QAAC,SAAD;AAAA,gCACJ;AAAQ,UAAA,OAAO,EAAE,MAAI,KAAKJ,aAAL,CAAmBI,IAAI,CAACC,EAAxB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADI,eAEH;AAAA,oBAAID,IAAI,CAACrB;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFG,eAGH;AAAA,oBAAIqB,IAAI,CAACpB;AAAT;AAAA;AAAA;AAAA;AAAA,gBAHG,eAIH;AAAA,qBAAIoB,IAAI,CAAC1C,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJG,eAKH;AAAA,oBAAI0C,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,gBALG,eAQL;AAAO,UAAA,EAAE,EAAC,YAAV;AAAuB,UAAA,QAAQ,MAA/B;AAAA,iCACA;AAAQ,YAAA,GAAG,EAAED,IAAI,CAAC1C,GAAlB;AAAuB,YAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBARK;AAAA,SAAgB0C,IAAI,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA,cAAN;AAaD,KAdc,CAAf;AAiBD,wBAEI;AAAA,8BACA;AAAQ,QAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWoB,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAO,QAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWE,SAAzB;AAAoC,QAAA,QAAQ,EAAE,KAAKiC,iBAAnD;AACA,QAAA,WAAW,EAAC;AADZ;AAAA;AAAA;AAAA;AAAA,cAHA,eAKA;AAAO,QAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWG,UAAzB;AAAqC,QAAA,QAAQ,EAAE,KAAKoC,kBAApD;AACA,QAAA,WAAW,EAAC;AADZ;AAAA;AAAA;AAAA;AAAA,cALA,eAOA;AAAO,QAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWI,GAAzB;AAA8B,QAAA,QAAQ,EAAE,KAAKoC,WAA7C;AAA0D,QAAA,WAAW,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA,cAPA,eAQA;AAAQ,QAAA,OAAO,EAAE,KAAKC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARA,EASCxB,MATD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAcD;;AAtH+C;;AA0HlD,eAAenB,kBAAf","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport ReactAudioPlayer from 'react-audio-player';\nimport { BASE_URL,  AuthorizationUser } from \"../../constants/urls\";\nimport {TracksBox} from './styled'\n\n\n\nclass PlayListDetailPage extends React.Component  { \n  state ={ \n    playlistTracks:[],\n    nameMusic:'',\n    nameArtist:'', \n    url:'',\n    music:'',\n  }\n\n  componentDidMount(){\n    this.getPlaylistTracks(this.props.listId)\n    console.log('didmount')\n  }\n   \n  getPlaylistTracks =(idList)=>{ \n    const url= `${BASE_URL}/${idList}/tracks`\n    const axiosConfig ={headers:{Authorization: AuthorizationUser}}\n    axios\n      .get(url, axiosConfig)\n      .then(res =>{\n        this.setState({\n          playlistTracks: (res.data.result.tracks),\n          nameMusic:'',\n          nameArtist:'', \n          url:'',\n        }) \n      })\n      .catch( err => console.log(err))\n  }\n\n  addTrackToPlaylist = (idPlaylist)=> { \n    const url= `${BASE_URL}/${idPlaylist}/tracks`\n    const axiosConfig ={headers:{Authorization: AuthorizationUser}}\n    const body ={ name:this.state.nameMusic , artist:this.state.nameArtist , url:this.state.url }\n\n    axios\n      .post(url,body,axiosConfig)\n      .then(res => { \n        console.log(res)\n         this.getPlaylistTracks(this.props.listId);\n         alert('Musica Adicionada');\n      })\n      .catch(err => console.log(err))\n  }\n\n  removeTrackFromPlaylist = (idlist ,idMusic)=> { \n    const url = `${BASE_URL}/${idlist}/tracks/${idMusic}`;\n    const axiosConfig ={headers:{Authorization: AuthorizationUser}};\n\n    axios\n      .delete(url, axiosConfig)\n      .then(res => { \n        console.log(res)\n         this.getPlaylistTracks(this.props.listId);\n         alert('Musica deletada');\n      })\n      .catch(err => console.log(err))\n  }\n\n  onChangeNameMusic =(e)=>{\n    this.setState({nameMusic:e.target.value})\n  }\n  onChangeNameSinger =(e) => { \n    this.setState({ nameArtist:e.target.value})\n  }\n  onChangeURL =(e)=> { \n    this.setState({url:e.target.value})\n  }\n  addMusic =() => { \n    console.log('clicado')\n    this.addTrackToPlaylist(this.props.listId)\n  }\n\n  // givenUrl = (url)=>{ \n  //   this.setState({music : new Audio(url)})\n  //   console.log(this.state.music)\n  // }\n  \n  onClickDelete = (idMusic)=> { \n    console.log('Delete clicado', idMusic)\n    this.removeTrackFromPlaylist( this.props.listId,idMusic)\n  \n  }\n\n  render(){ \n    console.log(this.state.playlistTracks)\n    // console.log(this.props.listId)\n     const tracks = this.state.playlistTracks.map(item => { \n       return<TracksBox key={item.id} >\n         <button onClick={()=>this.onClickDelete(item.id)}>Deletar</button>\n          <p>{item.name}</p>\n          <p>{item.artist}</p>\n          <p>{item.url} </p>\n          <p>{item.id}</p>\n        {/* <ReactAudioPlayer src={item.url}  controls/> */}\n\n        <audio id=\"Test_Audio\" controls>\n        <source src={item.url} type=\"audio/mpeg\"/>\n        </audio>\n\n       </TracksBox> \n     })\n\n\n    return(  \n          \n        <div>\n        <button onClick={this.props.onClickGotoList}>Voltar</button>\n        <h1>PlayListDetailPage</h1>\n        <input value={this.state.nameMusic} onChange={this.onChangeNameMusic} \n        placeholder=\"Nome da musica\"/>\n        <input value={this.state.nameArtist} onChange={this.onChangeNameSinger} \n        placeholder=\"Nome da cantor\"/>\n        <input value={this.state.url} onChange={this.onChangeURL} placeholder=\"URL\"/>\n        <button onClick={this.addMusic}>Add Music</button>\n        {tracks}\n        </div>\n    )\n  }\n\n}\n\nexport default PlayListDetailPage;"]},"metadata":{},"sourceType":"module"}