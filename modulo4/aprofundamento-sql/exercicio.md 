## Exercicio1

```
O SQL é um banco relacional e permite realizar queires complexas mais rapidamente do que bancos não relacionais.
 Uma das coisas que permite isso é o fato das tabelas serem muito bem definidas e com regras bem rigidas. 
 Só que, às vezes, a gente pode errar ao começar modelando uma tabela: confundir o tipo de alguma coluna; 
 esquecer de representar alguma informação e outras coisas. É por isso que é possível **alterar** as regras definidas por uma tabela. 
O comando que faz isso é o `ALTER`. O comando abaixo adiciona uma coluna na tabela de Actor para representar o sabor de sorvete favorito da celebridade
```

a) ALTER TABLE Actor DROP COLUMN salary;  

```
Removeria a coluna salario.
```

b)ALTER TABLE Actor CHANGE gender sex VARCHAR(6);
```
Troca o nome da coluna de gender para sex 
```

c)ALTER TABLE Actor CHANGE gender gender VARCHAR(255);

```
Troca o tamanhao da memoria reservada para as linhas da coluna gender 255 caracteres.
```


d) Agora, altere a coluna gender da tabela ACTOR para que ele aceite strings com até 100 caracteres
```
 ALTER TABLE Actor 
 CHANGE gender gender VARCHAR(100)
```

##  Exercicio2
```
Além de criar e ler as tabelas, é muito importante que entendamos também como atualizar e deletar.
Inclusive, essas 4 operações têm um nome muito famoso que vocês com certeza irão ouvir 
no dia a dia do trabalho: CRUD. Quando falamos que vamos fazer um CRUD, queremos dizer que 
vamos fazer alguma aplicação que cria (Create), lê (Read), atualiza (Update) e deleta (Delete) 
algum tipo de informação.
No MySQL, existem mais dois operadores que nos permitiram fazer o CRUD de qualquer coisa. 
O primeiro deles é o `UPDATE`. A query abaixo muda o nome do ator com id `123` para `Moacyr Franco`:
 `` 
  
                UPDATE Actor
                SET name = "Moacyr Franco"
                WHERE id = "123"

````
a) *Escreva uma query que atualize o nome e a data de nascimento do ator com o id `003`*

``` 
UPDATE Actor

            SET birth_date= "1983-04-13" , 
            name="Gabriel Martins",  
            SET gender = "Male"
            WHERE id = "003";

```
b) *Escreva uma query que atualize o nome da atriz `Juliana Paes` para `JULIANA PAES`. 
Então, escreva outra query para voltar ao nome anterior.*

``` 
                UPDATE Actor
                SET name="JULIANA PAES" 
                WHERE name="Juliana Paes";
                SELECT * FROM Actor;


                UPDATE Actor
                SET name="Juliana Paes"
                WHERE name="JULIANA PAES" ;
                SELECT * FROM Actor;


```
c) *Escreva uma query que atualize todas as informações do ator com o id `005`*
``` 
                UPDATE Actor 
                set name="Joe Doe" , 
                salary = 100000,
                birth_date = "1980-01-10",
                gender = "Male"
                WHERE id= "005";
                SELECT * FROM Actor;
```
d) *Escreva uma query em que você tente atualizar um dado da tabela que não existe (com um id inválido,
 por exemplo). Teste, anote e explique o resultado.*

``` 
        11:14:46
        UPDATE Actor  set name="Gabriel Martins" WHERE id="008"	0 row(s) 
        affected Rows matched: 0  Changed: 0  Warnings: 0	0.306 sec

```
