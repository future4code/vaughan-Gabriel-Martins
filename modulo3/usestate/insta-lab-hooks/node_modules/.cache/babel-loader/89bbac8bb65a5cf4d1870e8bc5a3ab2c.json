{"ast":null,"code":"var _jsxFileName = \"/Users/gdlmartins/Desktop/ti/labenu/semana01/codigos/vaughan-Gabriel-Martins/modulo3/usestate/insta-lab-hooks/src/components/Post/Post.js\";\nimport React, { useState } from 'react';\nimport { PostContainer, PostHeader, UserPhoto, PostPhoto, PostFooter, CommentContainer } from './styles';\nimport IconeComContador from '../IconeComContador/IconeComContador';\nimport SecaoComentario from '../SecaoComentario/SecaoComentario';\nimport iconeCoracaoBranco from \"../../img/favorite-white.svg\";\nimport iconeCoracaoPreto from \"../../img/favorite.svg\";\nimport iconeComentario from \"../../img/comment_icon.svg\";\n\nconst Post = props => {\n  const [curtida, setCurtida] = useState(true);\n  const [comentando, setComentando] = useState(false);\n  const [iconeCurtida, setIconeCurtida] = useState(iconeCoracaoBranco);\n  const [comentartioArray, setComentarioArray] = useState([]);\n  const [valorContador, setValorContador] = useState(0);\n  const [comentarioEnviado, setComentarioEnviado] = useState('');\n\n  const onClickCurtida = () => {\n    setCurtida(!curtida);\n\n    if (curtida) {\n      setIconeCurtida(iconeCoracaoPreto);\n    } else {\n      setIconeCurtida(iconeCoracaoBranco);\n    }\n  };\n\n  const onClickComentario = () => {\n    setComentando(!comentando);\n    console.log(comentando); // caixaDeComentario()\n  };\n\n  const enviarComentario = comentario => {\n    setComentarioEnviado(comentario);\n    setComentarioArray([...comentartioArray, comentarioEnviado]);\n    setValorContador(valorContador + 1);\n  };\n\n  const caixaDeComentario = () => {\n    return React.createElement(SecaoComentario, {\n      comentarioEnviado: comentarioEnviado,\n      enviarComentario: enviarComentario,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  };\n\n  return React.createElement(PostContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(PostHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(UserPhoto, {\n    src: props.fotoUsuario,\n    alt: 'Imagem do usuario',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.nomeUsuario)), React.createElement(PostPhoto, {\n    src: props.fotoPost,\n    alt: 'Imagem do post',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(PostFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(IconeComContador, {\n    icone: iconeCurtida,\n    onClickIcone: onClickCurtida // valorContador={numeroCurtidas}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(IconeComContador, {\n    icone: iconeComentario,\n    onClickIcone: onClickComentario // valorContador={numeroComentarios}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), comentando && caixaDeComentario(), comentando && comentartioArray.map(item => React.createElement(\"p\", {\n    key: Math.random(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, item)));\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/gdlmartins/Desktop/ti/labenu/semana01/codigos/vaughan-Gabriel-Martins/modulo3/usestate/insta-lab-hooks/src/components/Post/Post.js"],"names":["React","useState","PostContainer","PostHeader","UserPhoto","PostPhoto","PostFooter","CommentContainer","IconeComContador","SecaoComentario","Post","props","curtida","setCurtida","comentando","setComentando","iconeCurtida","setIconeCurtida","iconeCoracaoBranco","comentartioArray","setComentarioArray","valorContador","setValorContador","comentarioEnviado","setComentarioEnviado","onClickCurtida","iconeCoracaoPreto","onClickComentario","console","log","enviarComentario","comentario","caixaDeComentario","fotoUsuario","nomeUsuario","fotoPost","iconeComentario","map","item","Math","random"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { PostContainer, PostHeader, UserPhoto, PostPhoto, PostFooter, CommentContainer } from './styles'\n\nimport IconeComContador from '../IconeComContador/IconeComContador'\nimport SecaoComentario from '../SecaoComentario/SecaoComentario'\n\nimport iconeCoracaoBranco from '../../img/favorite-white.svg'\nimport iconeCoracaoPreto from '../../img/favorite.svg'\nimport iconeComentario from '../../img/comment_icon.svg'\n\nconst Post = (props) => {\n\n   const [curtida, setCurtida] =useState(true);\n   const [comentando, setComentando] =useState(false);\n   const [iconeCurtida,setIconeCurtida] =useState(iconeCoracaoBranco);\n   const [comentartioArray, setComentarioArray] =useState([]);\n   const [valorContador, setValorContador] =useState(0);\n   const [comentarioEnviado, setComentarioEnviado] =useState('');\n\n\n  const onClickCurtida = () => { setCurtida(!curtida) ;\n\n  if(curtida) { \n    setIconeCurtida(iconeCoracaoPreto);\n  }else{ \n    setIconeCurtida(iconeCoracaoBranco);\n  }\n  }\n\n  const onClickComentario = () => {\n    setComentando(!comentando);\n    console.log(comentando)\n    // caixaDeComentario()\n  };\n\n  const enviarComentario = (comentario) => {\n    setComentarioEnviado(comentario);\n    setComentarioArray([...comentartioArray, comentarioEnviado])\n    setValorContador(valorContador + 1 )\n    \n  }\n\n  const caixaDeComentario =() => {return <SecaoComentario \n    comentarioEnviado={comentarioEnviado}\n    enviarComentario={enviarComentario} />}\n  \n\n\n  return (\n    <PostContainer>\n      <PostHeader>\n        <UserPhoto src={props.fotoUsuario} alt={'Imagem do usuario'}/>\n        <p>{props.nomeUsuario}</p>\n      </PostHeader>\n\n      <PostPhoto src={props.fotoPost} alt={'Imagem do post'}/>\n\n      <PostFooter>\n        <IconeComContador\n          icone={iconeCurtida}\n          onClickIcone={onClickCurtida}\n          // valorContador={numeroCurtidas}\n        />\n\n        <IconeComContador\n          icone={iconeComentario}\n          onClickIcone={onClickComentario}\n          // valorContador={numeroComentarios}\n        />\n      </PostFooter>\n      {comentando && caixaDeComentario()}\n      {comentando && comentartioArray.map( item => <p key={Math.random()}>{item}</p>)}\n    </PostContainer>\n  )\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}